== Material Design Addon

Material Design (MD) for Bootstrap is a Bootstrap V3 compatible theme; it is
an easy way to use the new https://material.google.com/[Material Design
guidelines by Google] in your Bootstrap 3 based application. 

== Library Features

Just include the theme, after the Bootstrap CSS and include the JavaScript at
the end of your document (just before the `</body>` tag), and everything
will be converted to Material Design (Paper) style.

=== Initialization

==== CSS load

Add the necessary links to your `<head>` element for fonts and
stylesheets:

[source, html]
----
  <!-- Material Design fonts -->
  <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Roboto:300,400,500,700">
  <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/icon?family=Material+Icons">

  <!-- Bootstrap -->
  <link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

  <!-- Bootstrap Material Design -->
  <link rel="stylesheet" type="text/css" href="dist/css/bootstrap-material-design.css">
  <link rel="stylesheet" type="text/css" href="dist/css/ripples.min.css">
----

==== JS load

==== JS initialization

=== Options

=== Callbacks

=== Methods

=== How to use

Material Design (https://material.google.com/[spec]) for Bootstrap
provides styles for bootstrap based markup to comply with Material
Design concepts.

==== Colors

There are 17 color variations (in addition to the classic 4 variations)
described by the Material Design color palette:

image::{imagesdir}/material-design-color-palette.jpg[palette]

Compile your customized distributable

If you are using the static css files, you may want to use your own
color variation. To do so:

1.  `npm install && bower install` (alternatively you may download the
source, but using npm and bower is recommended)
2.  Edit the `less/_variables.less` file and alter the color variables.
You are most likely interested in altering `@brand-primary`. For a list
of material design color palette variables, refer to `less/_colors.less`
+
[source, less]
----
@brand-primary: @teal;
@brand-success: @green;
@brand-danger: @red;
@brand-warning: @deep-orange;
@brand-info: @light-blue;
----

3.  Compile and test your distributable css by running `grunt serve`,
this will launch your browser to the test site. Peruse and verify your
color choices
4.  From your application, you may now reference the compiled css files
in `dist/css`

Customize via less variables

If you are referencing source from your own application's less file, you
may simply customize the colors by redefining the color variables
_after_ including bootstrap-material-design. See above for a description
of variables.

==== Forms

All inputs should be surrounded by a standard `.form-group`, and as such
`material.js` will enforce this. The `.form-group` is used to signal
different input styles and variations. See the examples for variations.

===== Sizing

In general, it is preferred that sizing be altered with either
`.form-group-sm` or `.form-group-lg`. Due to the interconnected nature
of inputs, labels, margins and padding, `material.js` will convert any
use of `.input-sm` or `.input-lg` to `.form-group-sm` or
`.form-group-lg` in order to reduce the necessary markup/variations and
get a standard sizing with fewer side effects.

===== Buttons

Buttons are flat by default, without shadows. Add `.btn-raised` to a
button to add a permanent shadow to it. See the
http://fezvrasta.github.io/bootstrap-material-design/bootstrap-elements.html#buttons[button
examples]

===== Inputs

Labels

The following classes should be placed on the `.form-group` to indicate
the label style:

* `.label-floating` - renders label as a placeholder, that animates
above the field upon focus
* `.label-static` - renders label above the field. `input placeholder`
attribute can also be used in conjunction
* `.label-placeholder` - renders a label as a placeholder only
* no label, but use of `input placeholder` attribute - same rendering as
`.label-placeholder`

Hints

Upon focus, a hint can be displayed. Use any `p | span` with
`.help-block`.

Examples

[source, html]
----
  <div class="form-group label-static">
    <label for="i2" class="control-label">label-static</label>
    <input type="email" class="form-control" id="i2" placeholder="placeholder attribute">
    <p class="help-block">This is a hint as a <code>p.help-block.hint</code></p>
  </div>

  <div class="form-group label-floating">
    <label for="i5" class="control-label">label-floating</label>
    <input type="email" class="form-control" id="i5">
    <span class="help-block">This is a hint as a <code>span.help-block.hint</code></span>
  </div>

  <div class="form-group label-placeholder">
    <label for="i5p" class="control-label">label-placeholder</label>
    <input type="email" class="form-control" id="i5p">
    <span class="help-block">This is a hint as a <code>span.help-block.hint</code></span>
  </div>
----

==== Radio, Checkbox, Toggle

Be sure to inspect the source of the demos to find proper markup
examples. Remember to use the proper HTML markup.

Radio example:

[source, html]
----
<div class="form-group">
  <label class="col-lg-2 control-label">Radios</label>

  <div class="col-lg-10">
    <div class="radio radio-primary">
      <label>
        <input type="radio" name="optionsRadios" checked="">
        Option one
      </label>
    </div>
    <div class="radio radio-primary">
      <label>
        <input type="radio" name="optionsRadios">
        Option two
      </label>
    </div>
  </div>
</div>
----

==== Icons

Bootstrap Material Design supports the full range of original Material
Design icons! https://www.google.com/design/icons/[See the full set of
material design icons at the material icons library.]

It’s easy to incorporate icons into your web page.
http://fezvrasta.github.io/bootstrap-material-design/bootstrap-elements.html#icon[Here’s
an example]:

[source, html]
----
<i class="material-icons">face</i> face
----

Please be sure that the fonts are properly setup, see
link:#getting-started[Getting Started].

==== Cards

A card will expand to fill all of the available width (e.g. column's
width). Card's height will be automatically resized to match width.

Here is an example on how to use it:

[source, html]
----
<div class="card">

    <div class="card-height-indicator"></div>

    <div class="card-content">

        <div class="card-image">
            <img src="./image.jpg" alt="Loading image...">
            <h3 class="card-image-headline">Lorem Ipsum Dolor</h3>
        </div>

        <div class="card-body">
            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
        </div>

        <footer class="card-footer">
            <button class="btn btn-flat">Share</button>
            <button class="btn btn-flat btn-warning">Learn More</button>
        </footer>

    </div>

</div>
----

Cards will adapt to column's width. The card below will have width equal
to col-lg-6:

[source, html]
----
<div class="row">
    <div class="col-lg-3"></div>

    <div class="col-lg-6">
        <div class="card">
            ...
        </div>
    </div>

    <div class="col-lg-3"></div>
</div>
----

=== material.js

`material.js` is a jQuery plugin that adds some magic to your markup and
allows Material Design for Bootstrap to style some elements like inputs,
checkboxes, radios etc.

==== Functions

* `$.material.init()` - shortcut to run all the following commands:
* `$.material.ripples()` will apply ripples.js to the default elements.
* `$.material.input()` will enable the MD style to the text inputs, and
other kind of inputs (number, email, file etc).
* `$.material.checkbox():` will enable the MD style to the checkboxes
(remember to follow the markup guidelines explained in the
link:#inputs[Inputs section].
* `$.material.radio():` will enable the MD style to the checkboxes
(remember to follow the markup guidelines explained in the Inputs
section.

==== Apply only to specific elements

Every function expects an optional value that will be used as a selector
for the function; for example,
`$.material.ripples("#selector, #foobar")` will apply Ripples.js only to
`#selector` and `#foobar`. The functions that allows an optional
selector are `$.material.ripples`, `$.material.input`,
`$.material.checkbox` and `$.material.radio`.

You can even override the default values using the `$.material.options`
function. The default values are:

[source, js]
----
$.material.options = {
    "withRipples": ".btn:not(.btn-link), .card-image, .navbar a:not(.withoutripple), .nav-tabs a:not(.withoutripple), .withripple",
    "inputElements": "input.form-control, textarea.form-control, select.form-control",
    "checkboxElements": ".checkbox > label > input[type=checkbox]",
    "radioElements": ".radio > label > input[type=radio]"
}
----

==== Arrive.js support

If you need to dynamically add elements to your DOM then you may need to
include https://github.com/uzairfarooq/arrive[`Arrive.js`] before
`Material.js`. This will automatically apply `material.js` to every new
element added via JavaScript.

=== Plugins

Material Design for Bootstrap comes with styling support for various
external scripts:

==== SnackbarJS

Create snackbars and toasts with the
https://github.com/FezVrasta/snackbarjs[SnackbarJS plugin]. The default
toast style is the squared one (snackbar style). If you like to use the
rounded style (toast style), please add the `toast` class to the `style`
option of SnackbarJS.

==== RipplesJS

This is part of the Material Design for Bootstrap project and is a plain
JavaScript script which creates the ripple effect when clicking on the
specified elements. At the moment RipplesJS does not have its own
repository but it will probably have one in the future.

You may want to set a custom color to the ripples of a specific element,
to do so write:

[source, html]
----
<button class="btn btn-default" data-ripple-color="#F0F0F0">Custom ripple</button>
----

==== noUiSlider

Make cross-browser sliders and get them styled with Material Design
thanks to the support provided by this theme. Read more about
http://refreshless.com/nouislider/[noUiSlider here].

==== Dropdown.js

Finally a dropdown plugin that transforms select inputs in nice
dropdowns and does not drive you crazy. Read more about
https://github.com/FezVrasta/dropdown.js[Dropdown.js here].

==== Selectize.js

Transform select and multi-select inputs into advanced text inputs.
Material Design for BS provides a full replacement of the plugin's CSS,
so don't include it. Read more about
http://brianreavis.github.io/selectize.js/[selectize.js].

==== Bootstrap Material Datepicker

A Material Design datepicker created to be used with Material Design for
Bootstrap. +
Read more about
https://github.com/T00rk/bootstrap-material-datepicker[Bootstrap
Material Datepicker]

